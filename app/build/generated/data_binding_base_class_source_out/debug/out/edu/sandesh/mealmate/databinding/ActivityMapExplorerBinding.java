// Generated by view binder compiler. Do not edit!
package edu.sandesh.mealmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import edu.sandesh.mealmate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMapExplorerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout detailsSection;

  @NonNull
  public final FloatingActionButton fabMyLocation;

  @NonNull
  public final TextView infoAddress;

  @NonNull
  public final ImageView infoImage;

  @NonNull
  public final GridLayout infoIngredientsGrid;

  @NonNull
  public final TextView infoTitle;

  @NonNull
  public final CardView markerInfoCard;

  @NonNull
  public final TextView matchMsg;

  private ActivityMapExplorerBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout detailsSection, @NonNull FloatingActionButton fabMyLocation,
      @NonNull TextView infoAddress, @NonNull ImageView infoImage,
      @NonNull GridLayout infoIngredientsGrid, @NonNull TextView infoTitle,
      @NonNull CardView markerInfoCard, @NonNull TextView matchMsg) {
    this.rootView = rootView;
    this.detailsSection = detailsSection;
    this.fabMyLocation = fabMyLocation;
    this.infoAddress = infoAddress;
    this.infoImage = infoImage;
    this.infoIngredientsGrid = infoIngredientsGrid;
    this.infoTitle = infoTitle;
    this.markerInfoCard = markerInfoCard;
    this.matchMsg = matchMsg;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapExplorerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapExplorerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_map_explorer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapExplorerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detailsSection;
      LinearLayout detailsSection = ViewBindings.findChildViewById(rootView, id);
      if (detailsSection == null) {
        break missingId;
      }

      id = R.id.fab_my_location;
      FloatingActionButton fabMyLocation = ViewBindings.findChildViewById(rootView, id);
      if (fabMyLocation == null) {
        break missingId;
      }

      id = R.id.info_address;
      TextView infoAddress = ViewBindings.findChildViewById(rootView, id);
      if (infoAddress == null) {
        break missingId;
      }

      id = R.id.info_image;
      ImageView infoImage = ViewBindings.findChildViewById(rootView, id);
      if (infoImage == null) {
        break missingId;
      }

      id = R.id.info_ingredients_grid;
      GridLayout infoIngredientsGrid = ViewBindings.findChildViewById(rootView, id);
      if (infoIngredientsGrid == null) {
        break missingId;
      }

      id = R.id.info_title;
      TextView infoTitle = ViewBindings.findChildViewById(rootView, id);
      if (infoTitle == null) {
        break missingId;
      }

      id = R.id.marker_info_card;
      CardView markerInfoCard = ViewBindings.findChildViewById(rootView, id);
      if (markerInfoCard == null) {
        break missingId;
      }

      id = R.id.matchMsg;
      TextView matchMsg = ViewBindings.findChildViewById(rootView, id);
      if (matchMsg == null) {
        break missingId;
      }

      return new ActivityMapExplorerBinding((RelativeLayout) rootView, detailsSection,
          fabMyLocation, infoAddress, infoImage, infoIngredientsGrid, infoTitle, markerInfoCard,
          matchMsg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
