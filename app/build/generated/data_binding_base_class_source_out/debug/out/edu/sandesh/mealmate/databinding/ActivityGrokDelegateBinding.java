// Generated by view binder compiler. Do not edit!
package edu.sandesh.mealmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import edu.sandesh.mealmate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGrokDelegateBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView ingredientRecyclerView;

  @NonNull
  public final RecyclerView mealRecyclerView;

  @NonNull
  public final TextInputEditText priceEditText;

  @NonNull
  public final LinearLayout priceInputLayout;

  @NonNull
  public final MaterialButton sendRequestButton;

  @NonNull
  public final MaterialButton setPriceButton;

  private ActivityGrokDelegateBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView ingredientRecyclerView, @NonNull RecyclerView mealRecyclerView,
      @NonNull TextInputEditText priceEditText, @NonNull LinearLayout priceInputLayout,
      @NonNull MaterialButton sendRequestButton, @NonNull MaterialButton setPriceButton) {
    this.rootView = rootView;
    this.ingredientRecyclerView = ingredientRecyclerView;
    this.mealRecyclerView = mealRecyclerView;
    this.priceEditText = priceEditText;
    this.priceInputLayout = priceInputLayout;
    this.sendRequestButton = sendRequestButton;
    this.setPriceButton = setPriceButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGrokDelegateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGrokDelegateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_grok_delegate, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGrokDelegateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ingredientRecyclerView;
      RecyclerView ingredientRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (ingredientRecyclerView == null) {
        break missingId;
      }

      id = R.id.mealRecyclerView;
      RecyclerView mealRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (mealRecyclerView == null) {
        break missingId;
      }

      id = R.id.priceEditText;
      TextInputEditText priceEditText = ViewBindings.findChildViewById(rootView, id);
      if (priceEditText == null) {
        break missingId;
      }

      id = R.id.priceInputLayout;
      LinearLayout priceInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (priceInputLayout == null) {
        break missingId;
      }

      id = R.id.sendRequestButton;
      MaterialButton sendRequestButton = ViewBindings.findChildViewById(rootView, id);
      if (sendRequestButton == null) {
        break missingId;
      }

      id = R.id.setPriceButton;
      MaterialButton setPriceButton = ViewBindings.findChildViewById(rootView, id);
      if (setPriceButton == null) {
        break missingId;
      }

      return new ActivityGrokDelegateBinding((LinearLayout) rootView, ingredientRecyclerView,
          mealRecyclerView, priceEditText, priceInputLayout, sendRequestButton, setPriceButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
