// Generated by view binder compiler. Do not edit!
package edu.sandesh.mealmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.textfield.TextInputEditText;
import edu.sandesh.mealmate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GrokItemIngredientBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialCheckBox ingredientCheckBox;

  @NonNull
  public final TextView ingredientTextView;

  @NonNull
  public final TextInputEditText priceEditText;

  @NonNull
  public final LinearLayout priceInputContainer;

  @NonNull
  public final MaterialButton setPriceButton;

  private GrokItemIngredientBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialCheckBox ingredientCheckBox, @NonNull TextView ingredientTextView,
      @NonNull TextInputEditText priceEditText, @NonNull LinearLayout priceInputContainer,
      @NonNull MaterialButton setPriceButton) {
    this.rootView = rootView;
    this.ingredientCheckBox = ingredientCheckBox;
    this.ingredientTextView = ingredientTextView;
    this.priceEditText = priceEditText;
    this.priceInputContainer = priceInputContainer;
    this.setPriceButton = setPriceButton;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static GrokItemIngredientBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GrokItemIngredientBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.grok_item_ingredient, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GrokItemIngredientBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ingredientCheckBox;
      MaterialCheckBox ingredientCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (ingredientCheckBox == null) {
        break missingId;
      }

      id = R.id.ingredientTextView;
      TextView ingredientTextView = ViewBindings.findChildViewById(rootView, id);
      if (ingredientTextView == null) {
        break missingId;
      }

      id = R.id.priceEditText;
      TextInputEditText priceEditText = ViewBindings.findChildViewById(rootView, id);
      if (priceEditText == null) {
        break missingId;
      }

      id = R.id.priceInputContainer;
      LinearLayout priceInputContainer = ViewBindings.findChildViewById(rootView, id);
      if (priceInputContainer == null) {
        break missingId;
      }

      id = R.id.setPriceButton;
      MaterialButton setPriceButton = ViewBindings.findChildViewById(rootView, id);
      if (setPriceButton == null) {
        break missingId;
      }

      return new GrokItemIngredientBinding((MaterialCardView) rootView, ingredientCheckBox,
          ingredientTextView, priceEditText, priceInputContainer, setPriceButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
