// Generated by view binder compiler. Do not edit!
package edu.sandesh.mealmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import edu.sandesh.mealmate.R;
import edu.sandesh.mealmate.utils.CustomExpandableListView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddRecipeBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button addIngredientButton;

  @NonNull
  public final Button addInstructionButton;

  @NonNull
  public final Button backToDetailsButton;

  @NonNull
  public final Button backToIngredientsButton;

  @NonNull
  public final EditText cookTime;

  @NonNull
  public final CustomExpandableListView expandableListView;

  @NonNull
  public final RecyclerView instructionRecyclerView;

  @NonNull
  public final EditText newIngredientInput;

  @NonNull
  public final Button nextToIngredientsButton;

  @NonNull
  public final Button nextToInstructionsButton;

  @NonNull
  public final EditText prepTime;

  @NonNull
  public final ImageView recipeImage;

  @NonNull
  public final EditText recipeName;

  @NonNull
  public final Button saveRecipeButton;

  @NonNull
  public final EditText serves;

  @NonNull
  public final LinearLayout step1Layout;

  @NonNull
  public final LinearLayout step2Layout;

  @NonNull
  public final LinearLayout step3Layout;

  @NonNull
  public final TextView stepIndicator1;

  @NonNull
  public final TextView stepIndicator2;

  @NonNull
  public final TextView stepIndicator3;

  @NonNull
  public final Button uploadImageButton;

  private FragmentAddRecipeBinding(@NonNull ScrollView rootView,
      @NonNull Button addIngredientButton, @NonNull Button addInstructionButton,
      @NonNull Button backToDetailsButton, @NonNull Button backToIngredientsButton,
      @NonNull EditText cookTime, @NonNull CustomExpandableListView expandableListView,
      @NonNull RecyclerView instructionRecyclerView, @NonNull EditText newIngredientInput,
      @NonNull Button nextToIngredientsButton, @NonNull Button nextToInstructionsButton,
      @NonNull EditText prepTime, @NonNull ImageView recipeImage, @NonNull EditText recipeName,
      @NonNull Button saveRecipeButton, @NonNull EditText serves, @NonNull LinearLayout step1Layout,
      @NonNull LinearLayout step2Layout, @NonNull LinearLayout step3Layout,
      @NonNull TextView stepIndicator1, @NonNull TextView stepIndicator2,
      @NonNull TextView stepIndicator3, @NonNull Button uploadImageButton) {
    this.rootView = rootView;
    this.addIngredientButton = addIngredientButton;
    this.addInstructionButton = addInstructionButton;
    this.backToDetailsButton = backToDetailsButton;
    this.backToIngredientsButton = backToIngredientsButton;
    this.cookTime = cookTime;
    this.expandableListView = expandableListView;
    this.instructionRecyclerView = instructionRecyclerView;
    this.newIngredientInput = newIngredientInput;
    this.nextToIngredientsButton = nextToIngredientsButton;
    this.nextToInstructionsButton = nextToInstructionsButton;
    this.prepTime = prepTime;
    this.recipeImage = recipeImage;
    this.recipeName = recipeName;
    this.saveRecipeButton = saveRecipeButton;
    this.serves = serves;
    this.step1Layout = step1Layout;
    this.step2Layout = step2Layout;
    this.step3Layout = step3Layout;
    this.stepIndicator1 = stepIndicator1;
    this.stepIndicator2 = stepIndicator2;
    this.stepIndicator3 = stepIndicator3;
    this.uploadImageButton = uploadImageButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddRecipeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddRecipeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_recipe, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddRecipeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addIngredientButton;
      Button addIngredientButton = ViewBindings.findChildViewById(rootView, id);
      if (addIngredientButton == null) {
        break missingId;
      }

      id = R.id.addInstructionButton;
      Button addInstructionButton = ViewBindings.findChildViewById(rootView, id);
      if (addInstructionButton == null) {
        break missingId;
      }

      id = R.id.backToDetailsButton;
      Button backToDetailsButton = ViewBindings.findChildViewById(rootView, id);
      if (backToDetailsButton == null) {
        break missingId;
      }

      id = R.id.backToIngredientsButton;
      Button backToIngredientsButton = ViewBindings.findChildViewById(rootView, id);
      if (backToIngredientsButton == null) {
        break missingId;
      }

      id = R.id.cookTime;
      EditText cookTime = ViewBindings.findChildViewById(rootView, id);
      if (cookTime == null) {
        break missingId;
      }

      id = R.id.expandableListView;
      CustomExpandableListView expandableListView = ViewBindings.findChildViewById(rootView, id);
      if (expandableListView == null) {
        break missingId;
      }

      id = R.id.instructionRecyclerView;
      RecyclerView instructionRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (instructionRecyclerView == null) {
        break missingId;
      }

      id = R.id.newIngredientInput;
      EditText newIngredientInput = ViewBindings.findChildViewById(rootView, id);
      if (newIngredientInput == null) {
        break missingId;
      }

      id = R.id.nextToIngredientsButton;
      Button nextToIngredientsButton = ViewBindings.findChildViewById(rootView, id);
      if (nextToIngredientsButton == null) {
        break missingId;
      }

      id = R.id.nextToInstructionsButton;
      Button nextToInstructionsButton = ViewBindings.findChildViewById(rootView, id);
      if (nextToInstructionsButton == null) {
        break missingId;
      }

      id = R.id.prepTime;
      EditText prepTime = ViewBindings.findChildViewById(rootView, id);
      if (prepTime == null) {
        break missingId;
      }

      id = R.id.recipeImage;
      ImageView recipeImage = ViewBindings.findChildViewById(rootView, id);
      if (recipeImage == null) {
        break missingId;
      }

      id = R.id.recipeName;
      EditText recipeName = ViewBindings.findChildViewById(rootView, id);
      if (recipeName == null) {
        break missingId;
      }

      id = R.id.saveRecipeButton;
      Button saveRecipeButton = ViewBindings.findChildViewById(rootView, id);
      if (saveRecipeButton == null) {
        break missingId;
      }

      id = R.id.serves;
      EditText serves = ViewBindings.findChildViewById(rootView, id);
      if (serves == null) {
        break missingId;
      }

      id = R.id.step1Layout;
      LinearLayout step1Layout = ViewBindings.findChildViewById(rootView, id);
      if (step1Layout == null) {
        break missingId;
      }

      id = R.id.step2Layout;
      LinearLayout step2Layout = ViewBindings.findChildViewById(rootView, id);
      if (step2Layout == null) {
        break missingId;
      }

      id = R.id.step3Layout;
      LinearLayout step3Layout = ViewBindings.findChildViewById(rootView, id);
      if (step3Layout == null) {
        break missingId;
      }

      id = R.id.stepIndicator1;
      TextView stepIndicator1 = ViewBindings.findChildViewById(rootView, id);
      if (stepIndicator1 == null) {
        break missingId;
      }

      id = R.id.stepIndicator2;
      TextView stepIndicator2 = ViewBindings.findChildViewById(rootView, id);
      if (stepIndicator2 == null) {
        break missingId;
      }

      id = R.id.stepIndicator3;
      TextView stepIndicator3 = ViewBindings.findChildViewById(rootView, id);
      if (stepIndicator3 == null) {
        break missingId;
      }

      id = R.id.uploadImageButton;
      Button uploadImageButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadImageButton == null) {
        break missingId;
      }

      return new FragmentAddRecipeBinding((ScrollView) rootView, addIngredientButton,
          addInstructionButton, backToDetailsButton, backToIngredientsButton, cookTime,
          expandableListView, instructionRecyclerView, newIngredientInput, nextToIngredientsButton,
          nextToInstructionsButton, prepTime, recipeImage, recipeName, saveRecipeButton, serves,
          step1Layout, step2Layout, step3Layout, stepIndicator1, stepIndicator2, stepIndicator3,
          uploadImageButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
