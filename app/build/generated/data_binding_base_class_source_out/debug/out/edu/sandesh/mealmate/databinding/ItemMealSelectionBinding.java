// Generated by view binder compiler. Do not edit!
package edu.sandesh.mealmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import edu.sandesh.mealmate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMealSelectionBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView checkmark;

  @NonNull
  public final MaterialTextView cookTime;

  @NonNull
  public final LinearLayout cookTimeLayout;

  @NonNull
  public final MaterialTextView ingredientCount;

  @NonNull
  public final LinearLayout ingredientCountLayout;

  @NonNull
  public final MaterialTextView instructionCount;

  @NonNull
  public final LinearLayout instructionCountLayout;

  @NonNull
  public final ShapeableImageView mealImage;

  @NonNull
  public final MaterialTextView mealName;

  private ItemMealSelectionBinding(@NonNull MaterialCardView rootView, @NonNull ImageView checkmark,
      @NonNull MaterialTextView cookTime, @NonNull LinearLayout cookTimeLayout,
      @NonNull MaterialTextView ingredientCount, @NonNull LinearLayout ingredientCountLayout,
      @NonNull MaterialTextView instructionCount, @NonNull LinearLayout instructionCountLayout,
      @NonNull ShapeableImageView mealImage, @NonNull MaterialTextView mealName) {
    this.rootView = rootView;
    this.checkmark = checkmark;
    this.cookTime = cookTime;
    this.cookTimeLayout = cookTimeLayout;
    this.ingredientCount = ingredientCount;
    this.ingredientCountLayout = ingredientCountLayout;
    this.instructionCount = instructionCount;
    this.instructionCountLayout = instructionCountLayout;
    this.mealImage = mealImage;
    this.mealName = mealName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMealSelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMealSelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_meal_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMealSelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkmark;
      ImageView checkmark = ViewBindings.findChildViewById(rootView, id);
      if (checkmark == null) {
        break missingId;
      }

      id = R.id.cookTime;
      MaterialTextView cookTime = ViewBindings.findChildViewById(rootView, id);
      if (cookTime == null) {
        break missingId;
      }

      id = R.id.cookTimeLayout;
      LinearLayout cookTimeLayout = ViewBindings.findChildViewById(rootView, id);
      if (cookTimeLayout == null) {
        break missingId;
      }

      id = R.id.ingredientCount;
      MaterialTextView ingredientCount = ViewBindings.findChildViewById(rootView, id);
      if (ingredientCount == null) {
        break missingId;
      }

      id = R.id.ingredientCountLayout;
      LinearLayout ingredientCountLayout = ViewBindings.findChildViewById(rootView, id);
      if (ingredientCountLayout == null) {
        break missingId;
      }

      id = R.id.instructionCount;
      MaterialTextView instructionCount = ViewBindings.findChildViewById(rootView, id);
      if (instructionCount == null) {
        break missingId;
      }

      id = R.id.instructionCountLayout;
      LinearLayout instructionCountLayout = ViewBindings.findChildViewById(rootView, id);
      if (instructionCountLayout == null) {
        break missingId;
      }

      id = R.id.mealImage;
      ShapeableImageView mealImage = ViewBindings.findChildViewById(rootView, id);
      if (mealImage == null) {
        break missingId;
      }

      id = R.id.mealName;
      MaterialTextView mealName = ViewBindings.findChildViewById(rootView, id);
      if (mealName == null) {
        break missingId;
      }

      return new ItemMealSelectionBinding((MaterialCardView) rootView, checkmark, cookTime,
          cookTimeLayout, ingredientCount, ingredientCountLayout, instructionCount,
          instructionCountLayout, mealImage, mealName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
