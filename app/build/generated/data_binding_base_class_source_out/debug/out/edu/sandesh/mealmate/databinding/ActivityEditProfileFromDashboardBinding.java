// Generated by view binder compiler. Do not edit!
package edu.sandesh.mealmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import de.hdodenhof.circleimageview.CircleImageView;
import edu.sandesh.mealmate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditProfileFromDashboardBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final MaterialButton btnSaveProfile;

  @NonNull
  public final MaterialButton btnUploadPhoto;

  @NonNull
  public final TextInputEditText etAge;

  @NonNull
  public final TextInputEditText etDob;

  @NonNull
  public final TextInputEditText etFullName;

  @NonNull
  public final AutoCompleteTextView etGender;

  @NonNull
  public final TextInputEditText etMobile;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final TextInputLayout tilAge;

  @NonNull
  public final TextInputLayout tilDob;

  @NonNull
  public final TextInputLayout tilFullName;

  @NonNull
  public final TextInputLayout tilGender;

  @NonNull
  public final TextInputLayout tilMobile;

  private ActivityEditProfileFromDashboardBinding(@NonNull FrameLayout rootView,
      @NonNull MaterialButton btnSaveProfile, @NonNull MaterialButton btnUploadPhoto,
      @NonNull TextInputEditText etAge, @NonNull TextInputEditText etDob,
      @NonNull TextInputEditText etFullName, @NonNull AutoCompleteTextView etGender,
      @NonNull TextInputEditText etMobile, @NonNull CircleImageView profileImage,
      @NonNull TextInputLayout tilAge, @NonNull TextInputLayout tilDob,
      @NonNull TextInputLayout tilFullName, @NonNull TextInputLayout tilGender,
      @NonNull TextInputLayout tilMobile) {
    this.rootView = rootView;
    this.btnSaveProfile = btnSaveProfile;
    this.btnUploadPhoto = btnUploadPhoto;
    this.etAge = etAge;
    this.etDob = etDob;
    this.etFullName = etFullName;
    this.etGender = etGender;
    this.etMobile = etMobile;
    this.profileImage = profileImage;
    this.tilAge = tilAge;
    this.tilDob = tilDob;
    this.tilFullName = tilFullName;
    this.tilGender = tilGender;
    this.tilMobile = tilMobile;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditProfileFromDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditProfileFromDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_profile_from_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditProfileFromDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSaveProfile;
      MaterialButton btnSaveProfile = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveProfile == null) {
        break missingId;
      }

      id = R.id.btnUploadPhoto;
      MaterialButton btnUploadPhoto = ViewBindings.findChildViewById(rootView, id);
      if (btnUploadPhoto == null) {
        break missingId;
      }

      id = R.id.etAge;
      TextInputEditText etAge = ViewBindings.findChildViewById(rootView, id);
      if (etAge == null) {
        break missingId;
      }

      id = R.id.etDob;
      TextInputEditText etDob = ViewBindings.findChildViewById(rootView, id);
      if (etDob == null) {
        break missingId;
      }

      id = R.id.etFullName;
      TextInputEditText etFullName = ViewBindings.findChildViewById(rootView, id);
      if (etFullName == null) {
        break missingId;
      }

      id = R.id.etGender;
      AutoCompleteTextView etGender = ViewBindings.findChildViewById(rootView, id);
      if (etGender == null) {
        break missingId;
      }

      id = R.id.etMobile;
      TextInputEditText etMobile = ViewBindings.findChildViewById(rootView, id);
      if (etMobile == null) {
        break missingId;
      }

      id = R.id.profileImage;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.tilAge;
      TextInputLayout tilAge = ViewBindings.findChildViewById(rootView, id);
      if (tilAge == null) {
        break missingId;
      }

      id = R.id.tilDob;
      TextInputLayout tilDob = ViewBindings.findChildViewById(rootView, id);
      if (tilDob == null) {
        break missingId;
      }

      id = R.id.tilFullName;
      TextInputLayout tilFullName = ViewBindings.findChildViewById(rootView, id);
      if (tilFullName == null) {
        break missingId;
      }

      id = R.id.tilGender;
      TextInputLayout tilGender = ViewBindings.findChildViewById(rootView, id);
      if (tilGender == null) {
        break missingId;
      }

      id = R.id.tilMobile;
      TextInputLayout tilMobile = ViewBindings.findChildViewById(rootView, id);
      if (tilMobile == null) {
        break missingId;
      }

      return new ActivityEditProfileFromDashboardBinding((FrameLayout) rootView, btnSaveProfile,
          btnUploadPhoto, etAge, etDob, etFullName, etGender, etMobile, profileImage, tilAge,
          tilDob, tilFullName, tilGender, tilMobile);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
