// Generated by view binder compiler. Do not edit!
package edu.sandesh.mealmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import edu.sandesh.mealmate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMealBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout itemMealCard;

  @NonNull
  public final MaterialTextView mealCategory;

  @NonNull
  public final ShapeableImageView mealImage;

  @NonNull
  public final MaterialTextView mealName;

  @NonNull
  public final ImageView removeMealBtn;

  private ItemMealBinding(@NonNull RelativeLayout rootView, @NonNull RelativeLayout itemMealCard,
      @NonNull MaterialTextView mealCategory, @NonNull ShapeableImageView mealImage,
      @NonNull MaterialTextView mealName, @NonNull ImageView removeMealBtn) {
    this.rootView = rootView;
    this.itemMealCard = itemMealCard;
    this.mealCategory = mealCategory;
    this.mealImage = mealImage;
    this.mealName = mealName;
    this.removeMealBtn = removeMealBtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMealBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMealBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_meal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMealBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout itemMealCard = (RelativeLayout) rootView;

      id = R.id.mealCategory;
      MaterialTextView mealCategory = ViewBindings.findChildViewById(rootView, id);
      if (mealCategory == null) {
        break missingId;
      }

      id = R.id.mealImage;
      ShapeableImageView mealImage = ViewBindings.findChildViewById(rootView, id);
      if (mealImage == null) {
        break missingId;
      }

      id = R.id.mealName;
      MaterialTextView mealName = ViewBindings.findChildViewById(rootView, id);
      if (mealName == null) {
        break missingId;
      }

      id = R.id.removeMealBtn;
      ImageView removeMealBtn = ViewBindings.findChildViewById(rootView, id);
      if (removeMealBtn == null) {
        break missingId;
      }

      return new ItemMealBinding((RelativeLayout) rootView, itemMealCard, mealCategory, mealImage,
          mealName, removeMealBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
