// Generated by view binder compiler. Do not edit!
package edu.sandesh.mealmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import edu.sandesh.mealmate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRecipeDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialTextView cookTime;

  @NonNull
  public final LinearLayout ingredientsContainer;

  @NonNull
  public final ViewPager2 instructionsViewPager;

  @NonNull
  public final MaterialButton nextButton;

  @NonNull
  public final MaterialButton prevButton;

  @NonNull
  public final ImageView recipeImage;

  @NonNull
  public final MaterialTextView recipeName;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityRecipeDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialTextView cookTime, @NonNull LinearLayout ingredientsContainer,
      @NonNull ViewPager2 instructionsViewPager, @NonNull MaterialButton nextButton,
      @NonNull MaterialButton prevButton, @NonNull ImageView recipeImage,
      @NonNull MaterialTextView recipeName, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.cookTime = cookTime;
    this.ingredientsContainer = ingredientsContainer;
    this.instructionsViewPager = instructionsViewPager;
    this.nextButton = nextButton;
    this.prevButton = prevButton;
    this.recipeImage = recipeImage;
    this.recipeName = recipeName;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRecipeDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRecipeDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_recipe_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRecipeDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cookTime;
      MaterialTextView cookTime = ViewBindings.findChildViewById(rootView, id);
      if (cookTime == null) {
        break missingId;
      }

      id = R.id.ingredientsContainer;
      LinearLayout ingredientsContainer = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsContainer == null) {
        break missingId;
      }

      id = R.id.instructionsViewPager;
      ViewPager2 instructionsViewPager = ViewBindings.findChildViewById(rootView, id);
      if (instructionsViewPager == null) {
        break missingId;
      }

      id = R.id.nextButton;
      MaterialButton nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.prevButton;
      MaterialButton prevButton = ViewBindings.findChildViewById(rootView, id);
      if (prevButton == null) {
        break missingId;
      }

      id = R.id.recipeImage;
      ImageView recipeImage = ViewBindings.findChildViewById(rootView, id);
      if (recipeImage == null) {
        break missingId;
      }

      id = R.id.recipeName;
      MaterialTextView recipeName = ViewBindings.findChildViewById(rootView, id);
      if (recipeName == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityRecipeDetailBinding((CoordinatorLayout) rootView, cookTime,
          ingredientsContainer, instructionsViewPager, nextButton, prevButton, recipeImage,
          recipeName, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
