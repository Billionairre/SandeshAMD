// Generated by view binder compiler. Do not edit!
package edu.sandesh.mealmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import edu.sandesh.mealmate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemInstructionStepBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final MaterialTextView instructionText;

  @NonNull
  public final MaterialTextView stepNumber;

  private ItemInstructionStepBinding(@NonNull CardView rootView,
      @NonNull MaterialTextView instructionText, @NonNull MaterialTextView stepNumber) {
    this.rootView = rootView;
    this.instructionText = instructionText;
    this.stepNumber = stepNumber;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemInstructionStepBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemInstructionStepBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_instruction_step, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemInstructionStepBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.instructionText;
      MaterialTextView instructionText = ViewBindings.findChildViewById(rootView, id);
      if (instructionText == null) {
        break missingId;
      }

      id = R.id.stepNumber;
      MaterialTextView stepNumber = ViewBindings.findChildViewById(rootView, id);
      if (stepNumber == null) {
        break missingId;
      }

      return new ItemInstructionStepBinding((CardView) rootView, instructionText, stepNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
