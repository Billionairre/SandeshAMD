// Generated by view binder compiler. Do not edit!
package edu.sandesh.mealmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.google.android.material.textview.MaterialTextView;
import edu.sandesh.mealmate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDelegateIngredientBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final MaterialCheckBox checkboxSelectIngredient;

  @NonNull
  public final TextInputEditText edittextPrice;

  @NonNull
  public final TextInputLayout textinputPriceLayout;

  @NonNull
  public final MaterialTextView textviewIngredientName;

  private ItemDelegateIngredientBinding(@NonNull CardView rootView,
      @NonNull MaterialCheckBox checkboxSelectIngredient, @NonNull TextInputEditText edittextPrice,
      @NonNull TextInputLayout textinputPriceLayout,
      @NonNull MaterialTextView textviewIngredientName) {
    this.rootView = rootView;
    this.checkboxSelectIngredient = checkboxSelectIngredient;
    this.edittextPrice = edittextPrice;
    this.textinputPriceLayout = textinputPriceLayout;
    this.textviewIngredientName = textviewIngredientName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDelegateIngredientBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDelegateIngredientBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_delegate_ingredient, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDelegateIngredientBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkbox_select_ingredient;
      MaterialCheckBox checkboxSelectIngredient = ViewBindings.findChildViewById(rootView, id);
      if (checkboxSelectIngredient == null) {
        break missingId;
      }

      id = R.id.edittext_price;
      TextInputEditText edittextPrice = ViewBindings.findChildViewById(rootView, id);
      if (edittextPrice == null) {
        break missingId;
      }

      id = R.id.textinput_price_layout;
      TextInputLayout textinputPriceLayout = ViewBindings.findChildViewById(rootView, id);
      if (textinputPriceLayout == null) {
        break missingId;
      }

      id = R.id.textview_ingredient_name;
      MaterialTextView textviewIngredientName = ViewBindings.findChildViewById(rootView, id);
      if (textviewIngredientName == null) {
        break missingId;
      }

      return new ItemDelegateIngredientBinding((CardView) rootView, checkboxSelectIngredient,
          edittextPrice, textinputPriceLayout, textviewIngredientName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
