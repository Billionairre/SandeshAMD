// Generated by view binder compiler. Do not edit!
package edu.sandesh.mealmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import edu.sandesh.mealmate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecipeCardBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton recipeButton;

  @NonNull
  public final MaterialTextView recipeCookTime;

  @NonNull
  public final ImageView recipeImage;

  @NonNull
  public final MaterialTextView recipeIngredients;

  @NonNull
  public final MaterialTextView recipeSteps;

  @NonNull
  public final MaterialTextView recipeTitle;

  private RecipeCardBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton recipeButton, @NonNull MaterialTextView recipeCookTime,
      @NonNull ImageView recipeImage, @NonNull MaterialTextView recipeIngredients,
      @NonNull MaterialTextView recipeSteps, @NonNull MaterialTextView recipeTitle) {
    this.rootView = rootView;
    this.recipeButton = recipeButton;
    this.recipeCookTime = recipeCookTime;
    this.recipeImage = recipeImage;
    this.recipeIngredients = recipeIngredients;
    this.recipeSteps = recipeSteps;
    this.recipeTitle = recipeTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecipeCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecipeCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recipe_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecipeCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recipeButton;
      MaterialButton recipeButton = ViewBindings.findChildViewById(rootView, id);
      if (recipeButton == null) {
        break missingId;
      }

      id = R.id.recipeCookTime;
      MaterialTextView recipeCookTime = ViewBindings.findChildViewById(rootView, id);
      if (recipeCookTime == null) {
        break missingId;
      }

      id = R.id.recipeImage;
      ImageView recipeImage = ViewBindings.findChildViewById(rootView, id);
      if (recipeImage == null) {
        break missingId;
      }

      id = R.id.recipeIngredients;
      MaterialTextView recipeIngredients = ViewBindings.findChildViewById(rootView, id);
      if (recipeIngredients == null) {
        break missingId;
      }

      id = R.id.recipeSteps;
      MaterialTextView recipeSteps = ViewBindings.findChildViewById(rootView, id);
      if (recipeSteps == null) {
        break missingId;
      }

      id = R.id.recipeTitle;
      MaterialTextView recipeTitle = ViewBindings.findChildViewById(rootView, id);
      if (recipeTitle == null) {
        break missingId;
      }

      return new RecipeCardBinding((MaterialCardView) rootView, recipeButton, recipeCookTime,
          recipeImage, recipeIngredients, recipeSteps, recipeTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
